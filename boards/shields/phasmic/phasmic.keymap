/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define BLE 1
#define SWAP 2
#define UTIL 3

/ {

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "default";
            bindings = <
&kp ESC     &kp N1   &kp N2         &kp N3        &kp N4     &kp N5     &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &kp EQUAL
&kp TAB     &kp Q    &kp W          &kp E         &kp R      &kp T      &kp Y      &kp U     &kp I     &kp O    &kp P    &kp BSLH
&kp RET     &kp A    &kp S          &kp D         &kp F      &kp G      &kp H      &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT   &kp Z    &kp X          &kp C         &kp V      &kp B      &kp N      &kp M     &kp COMMA &kp DOT  &kp FSLH  &kp RSHFT
&kp GRAVE   &kp LALT &kp BSPC       &kp SPACE     &mo SWAP   &kp N5     &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &kp T
&mo BLE     &kp Q    &kp LCTRL      &kp LGUI      &mo UTIL   &kp T      &kp Y      &kp U     &kp I     &kp O    &kp P    &kp Y
            >;
        };

        ble_layer {
            display-name = "BLE";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4     &none &none &none &none &none &none
&kp F1            &kp F2          &kp F3          &kp F4          &kp F5          &kp F6           &none &none &none &none &none &none
&kp F7            &kp F8          &kp F9          &kp F10         &kp F11         &kp F12           &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &none &none &none &none &none &none
            >;
        };

        swap {
            display-name = "SWAP";
            bindings = <
&kp EQUAL   &kp N0    &kp N9      &kp N8      &kp N7      &kp N6      &kp N5      &kp N4      &kp N3      &kp N2      &kp N1      &kp ESC
&kp BSLH    &kp P     &kp O       &kp I       &kp U       &kp Y       &kp T       &kp R       &kp E       &kp W       &kp Q       &kp TAB
&kp SQT     &kp SEMI  &kp L       &kp K       &kp J       &kp H       &kp G       &kp F       &kp D       &kp S       &kp A       &kp RET
&kp RSHFT   &kp FSLH  &kp DOT     &kp COMMA   &kp M       &kp N       &kp B       &kp V       &kp C       &kp X       &kp Z       &kp LSHFT
&none &none           &none           &none           &none           &none            &none &none &none &none &none &none
&none &none           &none           &none           &none           &none            &none &none &none &none &none &none
            >;
        };

        util {
            display-name = "UTIL";
            bindings = <
&kp MINUS &kp PLUS    &kp UNDER         &none       &none       &none   &none &none &none &none &none &none
&kp LBRC  &kp RBRC    &none         &kp UP      &none       &none   &none &none &none &none &none &none
&kp LBKT  &kp RBKT    &kp LEFT      &kp DOWN    &kp RIGHT   &none   &none &none &none &none &none &none
&kp LPAR  &kp RPAR    &none         &none       &none       &none   &none &none &none &none &none &none
&none &none           &none         &none       &none       &none   &none &none &none &none &none &none
&none &none           &none         &none       &none       &none   &none &none &none &none &none &none
            >;
        };
    };
};
